plugins {
  id "ear"
  id "com.avast.gradle.docker-compose" version "0.6.13"
}

repositories { mavenCentral() }

dependencies {
  deploy project(":ejb")
  deploy project(path: ":web", configuration: "archives")
  //earlib "log4j:log4j:1.2.15:jar"
}

ear {
  def webProject = project(":web")
  //appDirName "src/main/app"  // use application metadata found in this folder
  //// put dependent libraries into APP-INF/lib inside the generated EAR
  //libDirName "APP-INF/lib"
  deploymentDescriptor {  // custom entries for application.xml:
    //fileName = "application.xml"  // same as the default value
    version = "1.4"  // same as the default value
    //applicationName = "customear"
    initializeInOrder = true
    //displayName = "Custom Ear"  // defaults to project.name
    ////defaults to project.description if not set
    description = "$rootProject.name Gradle EAR"
    //libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
    //module("my.jar", "java")  // won"t deploy as my.jar isn"t deploy dependency
    webModule("${webProject.name}-${webProject.version}.war", "/web")  // won"t deploy as my.war isn"t deploy dependency
    //securityRole "admin"
    //securityRole "superadmin"
    //withXml { provider -> // add a custom node to the XML
    //  provider.asNode().appendNode("data-source", "my/data/source")
    //}
  }
}

def profile = project.hasProperty("profile") ? project.getProperty("profile") : "gradle"

dockerCompose {
  useComposeFiles = [project.file("docker-compose-${profile}.yaml")]
  // captureContainersOutput = true
  captureContainersOutput = false
  stopContainers = true
  removeContainers = true
  removeImages = "Local"
  removeVolumes = true
  removeOrphans = true
  forceRecreate = true
  waitForTcpPorts = false
  projectName = project.name
}

composeUp.dependsOn assemble
